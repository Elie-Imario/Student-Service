openapi: 3.0.3
info:
  title: Student Service - SpringBoot REST API Service
  description: >-
    This is an API specification for student Service 
    written in SpringBoot
  version: 1.0.0
servers:
  - url: https://b5391b71-c894-489c-9927-c6bb5e26ebc5-dev.e1-eu-north-azure.choreoapis.dev/etudiant-service-app/etudiant-service/v1.0
paths:
  /etudiants:
    summary: List all students
    get:
      summary: List all students
      operationId: ListAllStudents
      tags:
        - students
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EtudiantSchemaKeyWithPK"

  /etudiant:
    post:
      summary: Insert a new student
      operationId: SetNewStudent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EtudiantSchemaKeyWithPK"

        "400":
          description: Invalid request body
      tags:
        - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EtudiantSchemaKey"

  /etudiants/{id}:
    summary: Get book by id
    get:
      tags:
        - students
      summary: Get student by ID
      operationId: GetStudentByID
      parameters:
        - name: id
          in: path
          description: ID of student to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EtudiantSchemaKeyWithPK"
        "404":
          description: Student not found

    delete:
      tags:
        - students
      summary: Delete student by ID
      description: Deletes a single student based on the ID supplied
      operationId: DeleteStudentByID
      parameters:
        - name: id
          in: path
          description: ID of student to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: Student ID not found

    put:
      tags:
        - students
      summary: Update student infos by ID
      description: Updates the infos of the student based on the ID supplied
      operationId: UpdateStudentByID
      parameters:
        - name: id
          in: path
          description: ID of student to update
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EtudiantSchemaKeyWithPK"

        "404":
          description: UUID not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EtudiantSchemaKey"


components:
  schemas:
    EtudiantSchemaKeyWithPK:
      type: object
      required:
        - etudiantId
        - matricule
        - nom
        - cin
        - dateNaiss
        - sexe
        - nationnalite
      properties:
        etudiantId:
          type: integer
          example: 1
        matricule:
          type: string
          example: "1548"
        nom:
          type: string
          example: "John Doe"
        cin:
          type: string
          example: "201052015574"
        dateNaiss:
          type: string
          example: "21-06-15"
        sexe:
          type: string
          example: "M"
        nationnalite:
          type: string
          example: "F"

    EtudiantSchemaKey:
      type: object
      required:
        - matricule
        - nom
        - cin
        - dateNaiss
        - sexe
        - nationnalite
      properties:
        matricule:
          type: string
          example: "1548"
        nom:
          type: string
          example: "John Doe"
        cin:
          type: string
          example: "201052015574"
        dateNaiss:
          type: string
          example: "21-06-15"
        sexe:
          type: string
          example: "M"
        nationnalite:
          type: string
          example: "F"